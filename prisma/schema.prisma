generator client {
  provider = "prisma-client-js"

  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model RateLimiterFlexible {
  key    String    @id
  points Int
  expire DateTime?
}

enum Role {
  CLIENT
  ADMIN
  MODERATOR
  FREELANCER
}

model User {
  uid               String    @id @default(cuid())
  username          String    @unique
  fullName          String
  email             String    @unique
  password          String
  role              Role      @default(CLIENT)
  otpPassword       String?   @unique
  otpPasswordExpiry DateTime?
  emailVerifiedAt   DateTime?
  phone             String?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  tokenVersion      Int       @default(0)
  trashedBy         String?
  trashedAt         DateTime?

  @@index([trashedAt])
  @@index([trashedBy])
  @@index([uid])
  @@index([username])
  @@index([email])
  @@index([role, createdAt])
  @@index([otpPassword], name: "otp_user_idx")
  @@index([role, username], name: "role_name_user_idx")
}

enum PROJECT_STATUS {
  PENDING // mean no one has accepted the project yet
  ONGOING // someone has accepted the project and now he/she is working on it
  COMPLETED // progress percentage is 100% 
}

model Projects {
  id                                   Int       @id @default(autoincrement())
  title                                String    @unique()
  detail                               String
  niche                                String
  bounty                               String
  deadline                             String
  progressPercentage                   String    @default("0")
  clientWhoPostedThisProject           String?
  freelancerWhoAreWorkingOnThisProject String[]
  createdAt                            DateTime  @default(now())
  trashedBy                            String?
  trashedAt                            DateTime?

  @@index([trashedAt])
  @@index([trashedBy])
  @@index([id])
  @@index([title])
  @@index([deadline])
  @@index([progressPercentage])
  @@index([clientWhoPostedThisProject])
  @@index([freelancerWhoAreWorkingOnThisProject])
  @@map("Projects")
}

model ContactUs {
  id        Int       @id @default(autoincrement())
  firstName String
  lastName  String
  email     String
  message   String
  createdAt DateTime  @default(now())
  trashedBy String?
  trashedAt DateTime?

  @@index([trashedAt])
  @@index([trashedBy])
  @@index([email])
  @@index([createdAt])
  @@index([message])
  @@map("ContactUs")
}

model Newsletter {
  id                 String  @id @default(cuid())
  email              String  @unique
  subscriptionStatus Boolean @default(true)

  createdAt DateTime @default(now())
}

model NavigationPages {
  id                   Int       @id @default(autoincrement())
  navigationPageConfig Json[]
  trashedBy            String?
  trashedAt            DateTime?

  @@index([trashedAt])
  @@index([trashedBy])
}

model GetQuote {
  id        Int       @id @default(autoincrement())
  name      String
  email     String
  phone     String
  company   String?   @default("")
  address   String
  deadline  String?
  services  String
  detail    String?   @default("")
  createdAt DateTime  @default(now())
  trashedBy String?
  trashedAt DateTime?

  @@index([email])
  @@index([id])
  @@index([createdAt])
  @@index([trashedAt])
  @@index([trashedBy])
  @@map("GetQuote")
}

model CreateServicesForQuote {
  id       Int    @id @default(autoincrement())
  services String
}

enum consultationStatus {
  PENDING
  ACCEPTED
  REJECTED
}

model ConsultationBooking {
  id          Int                @id @default(autoincrement())
  name        String
  email       String             @unique
  phone       String
  message     String
  bookingDate DateTime           @unique
  status      consultationStatus @default(PENDING)
  address     String
  trashedBy   String?
  trashedAt   DateTime?
  createdAt   DateTime           @default(now())

  @@index([id])
  @@index([email])
  @@index([bookingDate])
  @@index([status])
  @@index([trashedAt])
  @@index([trashedBy])
}

model HireUs {
  id        Int       @id @default(autoincrement())
  name      String
  email     String
  phone     String
  company   String?   @default("")
  address   String
  detail    String
  docs      Json[]
  createdAt DateTime  @default(now())
  trashedBy String?
  trashedAt DateTime?

  @@index([email])
  @@index([id])
  @@index([createdAt])
  @@index([trashedAt])
  @@index([trashedBy])
}

model FreeLancers {
  id              Int       @id @default(autoincrement())
  name            String
  email           String    @unique
  phone           String    @unique
  address         String
  detail          String
  yourPortfolio   String
  niche           String
  yourTopProject1 String
  yourTopProject2 String
  yourTopProject3 String
  isAccepted      Boolean   @default(false)
  createdAt       DateTime  @default(now())
  trashedBy       String?
  trashedAt       DateTime?

  @@index([email])
  @@index([id])
  @@index([phone])
  @@index([createdAt])
  @@index([trashedAt])
  @@index([trashedBy])
}

model NichesForFreelancers {
  id    Int    @id @default(autoincrement())
  niche String
}

generator client {
  provider = "prisma-client-js"

  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model RateLimiterFlexible {
  key    String    @id
  points Int
  expire DateTime?
}

enum Role {
  CLIENT
  ADMIN
  MODERATOR
}

model User {
  uid               String    @id @default(cuid())
  username          String    @unique
  fullName          String
  email             String    @unique
  password          String
  role              Role      @default(CLIENT)
  otpPassword       String?   @unique
  otpPasswordExpiry DateTime?
  emailVerifiedAt   DateTime?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  tokenVersion      Int       @default(0)
  trashedBy         String?
  trashedAt         DateTime?

  @@index([uid])
  @@index([username])
  @@index([email])
  @@index([role, createdAt])
  @@index([otpPassword], name: "otp_user_idx")
  @@index([role, username], name: "role_name_user_idx")
}

model ContactUs {
  id        Int       @id @default(autoincrement())
  firstName String
  lastName  String
  email     String
  message   String
  createdAt DateTime  @default(now())
  trashedBy String?
  trashedAt DateTime?

  @@index([email])
  @@index([createdAt])
  @@index([message])
  @@map("ContactUs")
}

model Newsletter {
  id                 String  @id @default(cuid())
  email              String  @unique
  subscriptionStatus Boolean @default(true)

  createdAt DateTime @default(now())
}

model NavigationPages {
  id                   Int       @id @default(autoincrement())
  navigationPageConfig Json[]
  trashedBy            String?
  trashedAt            DateTime?
}

model GetQuote {
  id        Int       @id @default(autoincrement())
  name      String
  email     String
  phone     String
  company   String?   @default("")
  address   String
  deadline  String?
  services  String
  detail    String?   @default("")
  createdAt DateTime  @default(now())
  trashedBy String?
  trashedAt DateTime?

  @@index([email])
  @@index([id])
  @@index([createdAt])
  @@map("GetQuote")
}

model CreateServicesForQuote {
  id       Int    @id @default(autoincrement())
  services String
}

enum consultationStatus {
  PENDING
  ACCEPTED
  REJECTED
  FINISHED
}

model ConsultationBooking {
  id          Int                @id @default(autoincrement())
  name        String
  email       String             @unique
  phone       String
  message     String
  bookingDate DateTime           @unique
  status      consultationStatus @default(PENDING)
  address     String
  trashedBy   String?
  trashedAt   DateTime?
  createdAt   DateTime           @default(now())

  @@index([id])
  @@index([email])
  @@index([bookingDate])
  @@index([status])
}
